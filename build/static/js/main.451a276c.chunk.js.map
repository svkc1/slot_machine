{"version":3,"sources":["assets/img/strawberry.png","assets/img/banana.png","assets/img/orange.png","assets/img/monkey.png","assets/audio/win.wav","assets/audio/fail.wav","assets/audio/coin.wav","components/Wheel.js","container/Spinner.js","components/Sound.js","container/SlotMachine.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Image","styled","img","_templateObject","Wheel","_ref","image","react_default","a","createElement","src","alt","data-testid","Spinner","state","spinning","wheels","images","strawberry","banana","orange","monkey","randomImage","_this","Math","floor","random","length","spin","setState","tick","isSpinning","setInterval","this","prevProps","prevState","clearInterval","props","onStop","Fragment","map","wheel","id","components_Wheel","key","concat","React","Component","audios","win","fail","coin","Sound","audio","autoPlay","preload","Title","h1","SlotMachine_templateObject","Buttons","div","_templateObject2","Button","button","_templateObject3","Winner","_templateObject4","Loser","_templateObject5","Footer","_templateObject6","MAX_PRIZE","CONSEC_PRIZE","NON_CONSEC_PRIZE","SlotMachine","isRunning","winner","prize","handleStart","lose","clearTimeout","start","handleStop","stop","handleResult","split","pop","result","uniq","_this2","setTimeout","_this3","_this$state","container_Spinner","onClick","disabled","components_Sound","href","Page","App_templateObject","App","container_SlotMachine","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.451a276c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/strawberry.d77cb177.png\";","module.exports = __webpack_public_path__ + \"static/media/banana.abf2234f.png\";","module.exports = __webpack_public_path__ + \"static/media/orange.7b3e3f1c.png\";","module.exports = __webpack_public_path__ + \"static/media/monkey.0208eeab.png\";","module.exports = __webpack_public_path__ + \"static/media/win.5419a33c.wav\";","module.exports = __webpack_public_path__ + \"static/media/fail.05c73073.wav\";","module.exports = __webpack_public_path__ + \"static/media/coin.e0f2b0be.wav\";","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst Image = styled.img`\n  width: 80px;\n  height: 80px;\n  border: 1px solid #eaeaea;\n  padding: 10px;\n`\n\nconst Wheel = ({ image }) => <Image src={image} alt={image} data-testid='wheel' />\n\nWheel.propTypes = {\n  image: PropTypes.string.isRequired\n}\n\nexport default Wheel\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Wheel from '../components/Wheel'\n\nimport strawberry from '../assets/img/strawberry.png'\nimport banana from '../assets/img/banana.png'\nimport orange from '../assets/img/orange.png'\nimport monkey from '../assets/img/monkey.png'\n\nclass Spinner extends React.Component {\n\n  static propTypes = {\n    spin: PropTypes.bool.isRequired,\n    onStop: PropTypes.func.isRequired\n  }\n\n  state = {\n    spinning: false,\n    wheels: [],\n  }\n\n  images = [strawberry, banana, orange, monkey]\n\n  componentDidMount() {\n    this.setState({\n      wheels: [\n        this.randomImage(),\n        this.randomImage(),\n        this.randomImage()\n      ]}\n    )\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return { spinning: props.spin }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { spinning } = this.state\n\n    if (spinning && (spinning !== prevState.spinning)) {\n      this.tick()\n    }\n\n    if (!spinning && (spinning !== prevState.spinning)) {\n      clearInterval(this.isSpinning)\n      this.props.onStop(this.state.wheels)\n    }\n  }\n\n  randomImage = () => this.images[Math.floor((Math.random() * this.images.length))]\n\n  spin = () => this.setState({\n    wheels: [\n      this.randomImage(),\n      this.randomImage(),\n      this.randomImage()\n    ]\n  })\n\n  tick = () => this.isSpinning = setInterval(this.spin, 50)\n\n  render() {\n    const { wheels } = this.state\n\n    return (\n      <React.Fragment>\n        {wheels.map((wheel, id) => (\n          <Wheel key={`${id}_${wheel}`} image={wheel} />)\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Spinner\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport win from '../assets/audio/win.wav'\nimport fail from '../assets/audio/fail.wav'\nimport coin from '../assets/audio/coin.wav'\n\nconst audios = { win, fail, coin }\n\nconst Sound = ({ audio }) => (\n  <audio autoPlay=\"autoplay\" preload=\"false\">\n    <source src={audios[audio]} />\n  </audio>\n)\n\nSound.propTypes = {\n  audio: PropTypes.string.isRequired\n}\n\nexport default Sound\n","import React from 'react'\nimport styled from 'styled-components'\nimport uniq from 'lodash/uniq'\n\nimport Spinner from './Spinner'\nimport Sound from '../components/Sound'\n\nconst Title = styled.h1`\n  font-size: 35px;\n`\n\nconst Buttons = styled.div`\n  margin: 10px auto;\n`\n\nconst Button = styled.button`\n  font-size: 20px;\n  margin: 0 10px;\n  padding: 10px;\n`\n\nconst Winner = styled.div`\n  margin: 20px auto;\n  font-size: 25px;\n  color: green;\n`\n\nconst Loser = styled.div`\nmargin: 20px auto;\nfont-size: 25px;\ncolor: red;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 20px;\n  right: 30px;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 12px;\n  text-align: center;\n  margin: 0 auto;\n`\n\nconst MAX_PRIZE = 100\nconst CONSEC_PRIZE = 20\nconst NON_CONSEC_PRIZE = 10\n\nclass SlotMachine extends React.Component {\n\n  state = {\n    isRunning: false,\n    winner: false,\n    prize: 0,\n  }\n\n  componentDidMount() {\n    this.start = setTimeout(() => {\n      this.handleStart()\n    }, 5000)\n  }\n\n  componentDidUpdate() {\n    if (this.state.isRunning) {\n      this.stop = setTimeout(() => {\n        this.handleStop()\n      }, 10000)\n    }\n  }\n\n  handleStart = () => {\n    this.setState({\n      isRunning: true,\n      winner: false,\n      lose: false,\n      prize: 0\n    })\n    clearTimeout(this.start)\n  }\n\n  handleStop = () => {\n    this.setState({ isRunning: false })\n    clearTimeout(this.stop)\n  }\n\n  handleResult = (wheels) => {\n    const images = wheels.map(wheel => wheel.split('/').pop())\n    const result = uniq(images)\n\n    // Loose.\n    if (result.length === 3) {\n      this.setState({ winner: false, lose: true, prize: 0 })\n      return\n    }\n\n    // Win max prize.\n    if (result.length === 1) {\n      this.setState({ winner: true, lose: false, prize: MAX_PRIZE })\n      return\n    }\n\n    // Two consecutive symbols.\n    if (images[0] === images[1] || images[1] === images[2]) {\n      this.setState({ winner: true, lose: false, prize: CONSEC_PRIZE })\n      return\n    }\n\n    // Non-consecutive symbols.\n    this.setState({ winner: true, lose: false, prize: NON_CONSEC_PRIZE })\n\n  }\n\n  render() {\n    const { isRunning, winner, lose, prize } = this.state\n\n    return (\n      <React.Fragment>\n        <Title>Einarmiger Bandit</Title>\n        <Spinner spin={isRunning} onStop={this.handleResult} />\n        <Buttons>\n          <Button onClick={this.handleStart} disabled={isRunning}>Start</Button>\n          <Button onClick={this.handleStop} disabled={!isRunning}>Stop</Button>\n        </Buttons>\n        <div data-testid='prize'>\n          {winner && <Winner>You win! Your prize: ${prize}.00</Winner>}\n          {(winner && prize === MAX_PRIZE) && <Sound audio='win' />}\n          {lose &&\n            <React.Fragment>\n              <Loser>You lose</Loser>\n              <Sound audio='fail' />\n            </React.Fragment>\n          }\n        </div>\n        <Footer>\n          Source code:&nbsp;\n          <a href=\"https://github.com/chgasparoto/react-slot-machine\">\n            https://github.com/chgasparoto/react-slot-machine\n          </a>\n        </Footer>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default SlotMachine\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport SlotMachine from './container/SlotMachine'\n\nconst Page = styled.div`\n  width: 600px;\n  margin: 10px auto;\n  text-align: center;\n`\n\nconst App = props => (\n  <Page>\n    <SlotMachine />\n  </Page>\n)\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}